// C++ program to find a prime number pair whose sum is equal to given number 


#include<bits/stdc++.h> 
using namespace std; 

// Generate all prime numbers less than n. 

bool SieveOfEratosthenes(int n, bool isPrime[]) 
{ 
        // bool isPrime[n+1];  //array
	isPrime[0] = isPrime[1] = false; 

        //Initialize all entries of boolean array as true.
	for (int i=2; i<=n; i++) 
		isPrime[i] = true; 

        //A value in isPrime[i] will finally be false if i is Not a prime, else true 
	for (int p=2; p*p<=n; p++) 
	{ 
	
		if (isPrime[p] == true) 
		{ 
			// Update all multiples of p 
			for (int i=p*p; i<=n; i += p) 
				isPrime[i] = false; 
		} 
	} 
} 

// Prints a prime pair with given sum 
void findPrimePair(int n) 
{ 
	// Generating primes using Sieve 
	bool isPrime[n+1]; 
	SieveOfEratosthenes(n, isPrime); 

	// Traversing all numbers to find first 
	// pair 
	for (int i=0; i<n; i++) 
	{       
                // check whether i and n-i are both prime or not. 
		if (isPrime[i] && isPrime[n-i])  //  && corresponds to the logical operation AND
		{ 
			cout << i << " " << (n-i); // a+ b = c //a + c-a  =c
			return; 
		} 
	} 
} 

// Driven program 
int main() 
{ 
	int n;
	cout<<"enter even no";
	cin>>n; //even no to be inputted by user
	findPrimePair(n); 
	return 0; 
} 

