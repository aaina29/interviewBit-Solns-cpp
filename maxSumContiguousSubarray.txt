find the contiguous subarray with maximum sum 

KADANE'S ALGORITHM (THIS ALGORITHM WILL NOT WORK FOR ALL NEGATIVE NO'S, IT WILL SIMPLY RETURN 0)
Initialize:
    max_so_far = 0
    max_ending_here = 0
Loop for each element of the array
  (a) max_ending_here = max_ending_here + a[i]
  (b) if(max_so_far < max_ending_here)
            max_so_far = max_ending_here
  (c) if(max_ending_here < 0)
            max_ending_here = 0
return max_so_far



(IMPLEMENTATION THAT HANDLES ALL NEGATIVE NO'S AS WELL)
int maxSubArraySum(int a[], int size) 
{ 
   int max_so_far = a[0]; 
   int curr_max = a[0]; 
  
   for (int i = 1; i < size; i++) 
   { 
        curr_max = max(a[i], curr_max+a[i]); 
        max_so_far = max(max_so_far, curr_max); 
   } 
   return max_so_far; 
} 